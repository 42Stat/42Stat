name: Project automation
on:
  issues:
    types: [unassigned, assigned, closed]

  pull_request:
    types: [opened, reopened, review_requested, closed]

env:
  backlog: ðŸ—ƒ Backlog
  in_progress: ðŸ–¥ In Progress
  code_review: ðŸ’¬ Code Review
  done: âœ… Done

  wait: WAIT
  wip: WIP

  event_name: ${{ github.event_name }}
  event_action: ${{ github.event.action }}
  issue_id: ${{ github.event.issue.node_id }}
  pr_id: ${{ github.event.pull_request.node_id }}
  issue_num: ${{ github.event.issue.number }}

jobs:
  check_event:
    runs-on: ubuntu-latest
    outputs:
      to: ${{ steps.figure.outputs.moveto }}
      node_id: ${{ steps.figure.outputs.nodedata }}
      label: ${{ steps.figure.outputs.label }}
    steps:
      - id: figure
        run: |
          echo $event_name
          echo $event_action
          echo $issue_id
          case $event_name in
            issues)
              NODE="$issue_id"
              case $event_action in
                unassigned)
                  TO="$backlog";;
                assigned)
                  TO="$in_progress";;
                closed)
                  TO="$done";;
              esac
            ;;
            pull_request)
              NODE="$pr_id"
              case $event_action in
                opened | reopened | review_requested)
                  TO="$code_review";;
                closed)
                  TO="$done" ;;
              esac
            ;;
          esac
          echo "will move to $TO using node: $NODE"
          echo "name=moveto::$TO" >> $GITHUB_OUTPUT
          echo "name=nodedata::$NODE" >> $GITHUB_OUTPUT
          echo "name=label::$LABEL" >> $GITHUB_OUTPUT

  move_card:
    runs-on: ubuntu-latest
    needs: check_event
    steps:
      - name: Move issue to ${{ needs.check_event.outputs.to }}
        uses: leonsteinhaeuser/project-beta-automations@v1.2.1
        with:
          gh_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          organization: 42Stat
          project_id: 1
          resource_node_id: ${{ needs.check_event.outputs.node_id }}
          status_value: ${{ needs.check_event.outputs.to }}
